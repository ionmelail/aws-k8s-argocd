############################################
# Namespace Configuration for Demo App
############################################
apiVersion: v1
kind: Namespace
metadata:
  name: demo-app

---
############################################
# AWS ECR Secret for Pulling Images
############################################
apiVersion: v1
kind: Secret
metadata:
  name: aws-ecr-secret
  namespace: demo-app
  annotations:
    kubernetes.io/service-account.name: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: REPLACE_WITH_ECR_CREDENTIALS_BASE64  # ðŸ”„ Generate and replace this

---
############################################
# Deployment for Demo App (Pulling Image from AWS ECR)
############################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
        - name: demo-app
          image: <aws_account_id>.dkr.ecr.<region>.amazonaws.com/demo-app:latest  # ðŸ”„ Replace with actual ECR URL
          ports:
            - containerPort: 8080
          env:
            - name: ENVIRONMENT
              value: "production"
      imagePullSecrets:
        - name: aws-ecr-secret  # âœ… Ensures Kubernetes can pull from AWS ECR

---
############################################
# Service to Expose Demo App
############################################
apiVersion: v1
kind: Service
metadata:
  name: demo-app-service
  namespace: demo-app
spec:
  selector:
    app: demo-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
